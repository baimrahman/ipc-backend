{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_strict-method.js","webpack:///./node_modules/element-ui/lib/utils/resize-event.js","webpack:///./node_modules/core-js/modules/es6.array.sort.js","webpack:///./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js"],"names":["fails","module","exports","method","arg","call","__esModule","removeResizeListener","addResizeListener","undefined","_resizeObserverPolyfill","_resizeObserverPolyfill2","_interopRequireDefault","obj","default","isServer","window","resizeHandler","entries","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","length","next","done","value","entry","listeners","target","__resizeListeners__","forEach","fn","element","__ro__","observe","push","splice","indexOf","disconnect","$export","aFunction","toObject","$sort","sort","test","P","F","comparefn","this","MapShim","Map","getIndex","arr","key","result","some","index","class_1","__entries__","Object","defineProperty","prototype","get","enumerable","configurable","set","delete","has","clear","callback","ctx","_a","isBrowser","document","global$1","global","Math","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","trailingTimeout","throttle","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","addObserver","observer","connect_","removeObserver","observers","disconnect_","changesDetected","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","attributes","childList","characterData","subtree","removeEventListener","_b","propertyName","isReflowProperty","getInstance","instance_","defineConfigurable","props","keys","writable","getWindowOf","ownerGlobal","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","arguments","reduce","size","position","getPaddings","paddings","positions_1","getSVGContentRect","bbox","getBBox","width","height","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","horizPad","left","right","vertPad","top","bottom","boxSizing","round","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","documentElement","getContentRect","createReadOnlyRect","x","y","Constr","DOMRectReadOnly","rect","create","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","broadcastRect","ResizeObserverEntry","rectInit","contentRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","map","WeakMap","ResizeObserver","apply"],"mappings":"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","file":"js/chunk-b6379046.2a74dd08.js","sourcesContent":["'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n","'use strict';\n\nexports.__esModule = true;\nexports.removeResizeListener = exports.addResizeListener = undefined;\n\nvar _resizeObserverPolyfill = require('resize-observer-polyfill');\n\nvar _resizeObserverPolyfill2 = _interopRequireDefault(_resizeObserverPolyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar isServer = typeof window === 'undefined';\n\n/* istanbul ignore next */\nvar resizeHandler = function resizeHandler(entries) {\n  for (var _iterator = entries, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var entry = _ref;\n\n    var listeners = entry.target.__resizeListeners__ || [];\n    if (listeners.length) {\n      listeners.forEach(function (fn) {\n        fn();\n      });\n    }\n  }\n};\n\n/* istanbul ignore next */\nvar addResizeListener = exports.addResizeListener = function addResizeListener(element, fn) {\n  if (isServer) return;\n  if (!element.__resizeListeners__) {\n    element.__resizeListeners__ = [];\n    element.__ro__ = new _resizeObserverPolyfill2.default(resizeHandler);\n    element.__ro__.observe(element);\n  }\n  element.__resizeListeners__.push(fn);\n};\n\n/* istanbul ignore next */\nvar removeResizeListener = exports.removeResizeListener = function removeResizeListener(element, fn) {\n  if (!element || !element.__resizeListeners__) return;\n  element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n  if (!element.__resizeListeners__.length) {\n    element.__ro__.disconnect();\n  }\n};","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n"],"sourceRoot":""}